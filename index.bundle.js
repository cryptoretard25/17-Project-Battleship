/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/data_structures/queue.js":
/*!**************************************!*\
  !*** ./src/data_structures/queue.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Queue)
/* harmony export */ });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Queue = /*#__PURE__*/function () {
  function Queue() {
    _classCallCheck(this, Queue);
    this.items = [];
  }
  _createClass(Queue, [{
    key: "isEmpty",
    value: function isEmpty() {
      return this.items.length === 0;
    }
  }, {
    key: "enqueue",
    value: function enqueue(el) {
      return this.items.push(el);
    }
  }, {
    key: "dequeue",
    value: function dequeue() {
      return this.items.shift();
    }
  }, {
    key: "clear",
    value: function clear() {
      return this.items = [];
    }
  }, {
    key: "peek",
    value: function peek() {
      if (this.isEmpty()) return null;
      return this.items[0];
    }
  }, {
    key: "last",
    value: function last() {
      if (this.size < 1) return;
      return this.items[this.size() - 1];
    }
  }, {
    key: "size",
    value: function size() {
      return this.items.length;
    }
  }, {
    key: "print",
    value: function print() {
      return this.items;
    }
  }]);
  return Queue;
}();


/***/ }),

/***/ "./src/modules/board.js":
/*!******************************!*\
  !*** ./src/modules/board.js ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Board)
/* harmony export */ });
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Board = /*#__PURE__*/function () {
  function Board() {
    _classCallCheck(this, Board);
    this.grid = Array.from({
      length: 10
    }, function () {
      return Array.from({
        length: 10
      }, function () {
        return false;
      });
    });
    this.ships = new Map();
    this.reserved = [];
  }
  _createClass(Board, [{
    key: "_blockCells",
    value: function _blockCells(x, y) {
      if (x < 0 || x > 9 || y < 0 || y > 9 || this.grid[x][y]) return "Out of range";
      this.grid[x][y] = "res";
      this.reserved.push([x, y]);
    }
  }, {
    key: "_isBlocked",
    value: function _isBlocked(ship, x, y) {
      var _this = this;
      if (ship.direction === "v") {
        var _loop = function _loop(i) {
          if (_this.reserved.some(function (item) {
            return item[0] == i && item[1] == y;
          })) {
            return {
              v: true
            };
          }
        };
        for (var i = x; i < x + ship.size; i++) {
          var _ret = _loop(i);
          if (_typeof(_ret) === "object") return _ret.v;
        }
      }
      if (ship.direction === "h") {
        var _loop2 = function _loop2(_i) {
          if (_this.reserved.some(function (item) {
            return item[0] == x && item[1] == _i;
          })) {
            return {
              v: true
            };
          }
        };
        for (var _i = y; _i < y + ship.size; _i++) {
          var _ret2 = _loop2(_i);
          if (_typeof(_ret2) === "object") return _ret2.v;
        }
      }
      return false;
    }
  }, {
    key: "_canPlaceShip",
    value: function _canPlaceShip(ship, x, y) {
      if (this.grid[x] === undefined || this.grid[y] === undefined) return false;
      return ship.direction === "v" && !this.grid[x][y] && x + ship.size - 1 <= 9 && !this._isBlocked(ship, x, y) || ship.direction === "h" && !this.grid[x][y] && y + ship.size - 1 <= 9 && !this._isBlocked(ship, x, y) || false;
    }
  }, {
    key: "placeShip",
    value: function placeShip(ship, x, y) {
      if (!this._canPlaceShip(ship, x, y)) return "Ship cant be placed here";
      if (this.ships.has(ship)) return "Cant place one ship twice";
      this.ships.set(ship, []);
      if (ship.direction === "v") {
        for (var i = 0; i < ship.size; i++) {
          this.ships.get(ship).push([x + i, y]);
          ship.decks.push(JSON.stringify([x + i, y]));
          this.grid[x + i][y] = [ship, i];
          for (var j = -1; j <= 1; j++) {
            this._blockCells(x + ship.size, y + j);
            this._blockCells(x - 1, y + j);
            if (j === 0) continue;
            this._blockCells(x + i, y + j);
          }
        }
        return this.ships.get(ship);
      } else if (ship.direction === "h") {
        for (var _i2 = 0; _i2 < ship.size; _i2++) {
          this.ships.get(ship).push([x, y + _i2]);
          ship.decks.push(JSON.stringify([x, y + _i2]));
          this.grid[x][y + _i2] = [ship, _i2];
          for (var _j = -1; _j <= 1; _j++) {
            this._blockCells(x + _j, y + ship.size);
            this._blockCells(x + _j, y - 1);
            if (_j === 0) continue;
            this._blockCells(x + _j, y + _i2);
          }
        }
        return this.ships.get(ship);
      } else return "Ship cant be placed here";
    }
  }, {
    key: "receiveAttack",
    value: function receiveAttack(x, y) {
      var target = this.grid[x][y];
      if (Array.isArray(target)) {
        if (["hit", "miss"].includes(target[1])) return "This cell already attacked";
        var _target = _slicedToArray(target, 2),
          ship = _target[0],
          pos = _target[1];
        ship.hit(pos);
        this.grid[x][y][1] = ship.hits[pos];
        if (ship.sink) {
          return "sink";
        } else {
          return "hit";
        }
      } else if (!target || target === "res") {
        this.grid[x][y] = [target, "miss"];
        return "miss";
      }
    }
  }]);
  return Board;
}();


/***/ }),

/***/ "./src/modules/computer.js":
/*!*********************************!*\
  !*** ./src/modules/computer.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Computer)
/* harmony export */ });
/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./player */ "./src/modules/player.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, "prototype", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }
function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }
function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } else if (call !== void 0) { throw new TypeError("Derived constructors may only return object or undefined"); } return _assertThisInitialized(self); }
function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }
function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var Computer = /*#__PURE__*/function (_Player) {
  _inherits(Computer, _Player);
  var _super = _createSuper(Computer);
  function Computer(gameboard, ShipClass, queue) {
    var _this;
    _classCallCheck(this, Computer);
    _this = _super.call(this, gameboard, ShipClass, queue);
    _this.name = 'computer';
    return _this;
  }
  _createClass(Computer, [{
    key: "_generateRandomCoords",
    value: function _generateRandomCoords() {
      return [Math.floor(Math.random() * 10), Math.floor(Math.random() * 10)];
    }
  }, {
    key: "generateCoords",
    value: function generateCoords() {
      var _this$_generateRandom = this._generateRandomCoords(),
        _this$_generateRandom2 = _slicedToArray(_this$_generateRandom, 2),
        x = _this$_generateRandom2[0],
        y = _this$_generateRandom2[1];
      if (!this.attacks.some(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2),
          a = _ref2[0],
          b = _ref2[1];
        return a === x && b === y;
      })) {
        this.attacks.push([x, y]);
        return [x, y];
      } else {
        return this.generateCoords();
      }
    }
  }, {
    key: "generateRandomDir",
    value: function generateRandomDir() {
      var dir = ["v", "h"];
      return dir[Math.floor(Math.random() * 2)];
    }
  }, {
    key: "placeShip",
    value: function placeShip() {
      if (this.isAllPlaced()) return "All ships are placed";
      var dir = this.generateRandomDir();
      var ship = this.ships.dequeue();
      var _this$_generateRandom3 = this._generateRandomCoords(),
        _this$_generateRandom4 = _slicedToArray(_this$_generateRandom3, 2),
        x = _this$_generateRandom4[0],
        y = _this$_generateRandom4[1];
      ship.setDirection(dir);
      var result = this.gameboard.placeShip(ship, x, y);
      while (result === "Ship cant be placed here") {
        var _this$_generateRandom5 = this._generateRandomCoords();
        var _this$_generateRandom6 = _slicedToArray(_this$_generateRandom5, 2);
        x = _this$_generateRandom6[0];
        y = _this$_generateRandom6[1];
        result = this.gameboard.placeShip(ship, x, y);
      }
      return result;
    }
  }, {
    key: "placeAllShips",
    value: function placeAllShips() {
      while (this.ships.size()) {
        this.placeShip();
      }
      console.log(this.gameboard.grid);
      return this.gameboard.grid;
    }
  }, {
    key: "attackEnemy",
    value: function attackEnemy(enemy, x, y) {
      if (enemy.isAllSunk()) return;
      this.attacks.push([x, y]);
      var result = enemy.gameboard.receiveAttack(x, y);
      if (result === "sink" && enemy.isAllSunk()) return {
        value: "sink",
        gamestate: "game over"
      };
      return result;
    }
  }]);
  return Computer;
}(_player__WEBPACK_IMPORTED_MODULE_0__["default"]);


/***/ }),

/***/ "./src/modules/dom/Dom.js":
/*!********************************!*\
  !*** ./src/modules/dom/Dom.js ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
var _console = console,
  log = _console.log;
var DOM = function () {
  var _timeout = function _timeout(ms) {
    return new Promise(function (resolve) {
      return setTimeout(resolve, ms);
    });
  };

  // Place ships
  function _getDir(shipWrapper) {
    return shipWrapper.style.flexDirection === "column" ? "v" : "h";
  }
  function _setDir(shipWrapper, dir, decks) {
    if (dir === "v") {
      shipWrapper.style.flexDirection = "column";
      shipWrapper.style.height = "".concat(4.5 * decks, "em");
      shipWrapper.style.width = "4.5em";
    } else if (dir === "h") {
      shipWrapper.style.flexDirection = "row";
      shipWrapper.style.height = "4.5em";
      shipWrapper.style.width = "".concat(4.5 * decks, "em");
    }
  }
  function _createShipElement(parent, decks) {
    var shipDirection = _getDir(parent);
    parent.innerHTML = "";
    for (var i = 0; i < decks; i++) {
      parent.insertAdjacentHTML("afterbegin", "\n          <div class=\"cell\">\n            <div class=\"ship\"></div>\n          </div>  \n        ");
    }
    parent.style.display = "flex";
    _setDir(parent, shipDirection, decks);
  }

  //------------------------------------------------------------------------------------------
  // Game functions
  var gameflow = function () {
    function _findCell(coords, cellsArray) {
      return cellsArray.find(function (cell) {
        return cell.dataset.coords === coords;
      });
    }
    function _createSinkedShip(attakedShips, cellsArray, coord) {
      var sinkedShip = attakedShips.find(function (item) {
        return item.decks.some(function (deck) {
          return deck === coord;
        });
      });
      log(sinkedShip);
      var _iterator = _createForOfIteratorHelper(sinkedShip.decks),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var coords = _step.value;
          var cell = _findCell(coords, cellsArray);
          cell.innerHTML = '<div class="enemy-ship"></div>';
          cell.className = "cell hit-black";
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
    function _handleAttack(attakedClass, coords, result) {
      var cells = _toConsumableArray(document.querySelectorAll(".".concat(attakedClass.name, " .cell")));
      var cell = _findCell(coords, cells);
      if (attakedClass.name === "computer") {
        if (result === "miss") {
          cell.className = "cell miss";
        } else if (result === "hit") {
          cell.className = "cell hit-black";
        } else if (result === "sink") {
          _createSinkedShip(attakedClass.playerShips, cells, coords);
        }
      }
      if (attakedClass.name === "player") {
        if (result === "miss") {
          cell.className = "cell miss";
        }
        if (result === "hit" || result === "sink") {
          cell.className = "cell hit";
        }
      }
    }
    function gameStart(GameClass, mainDiv, board, alertFn, endgameFn) {
      var player = GameClass.player;
      var computer = GameClass.computer;
      if (!player.ships.isEmpty()) {
        alertFn("You should place all ships before game starts");
        return;
      }
      mainDiv.append(createPlayerBoard(board));
      mainDiv.append(createComputerBoard(GameClass, alertFn, endgameFn));
      computer.placeAllShips();
      alertFn("Game Started");
      var placeShipMenu = document.querySelector(".place-ship-menu");
      document.body.removeChild(placeShipMenu);
    }
    function attack(_x, _x2, _x3, _x4) {
      return _attack.apply(this, arguments);
    }
    function _attack() {
      _attack = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(e, GameClass, alertFn, endgameFn) {
        var coords;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              e.preventDefault();
              if (!(GameClass._getAttacker().name === "computer")) {
                _context.next = 4;
                break;
              }
              alertFn("Its not your turn");
              return _context.abrupt("return");
            case 4:
              coords = e.target.dataset.coords;
              _context.next = 7;
              return GameClass.attack(coords, _handleAttack, alertFn, endgameFn);
            case 7:
            case "end":
              return _context.stop();
          }
        }, _callee);
      }));
      return _attack.apply(this, arguments);
    }
    return {
      attack: attack,
      gameStart: gameStart
    };
  }();
  var _placeShipEvents = function () {
    function dragStart(e) {
      e.dataTransfer.setData("text/plain", e.target.id);
      setTimeout(function () {
        e.target.style.display = "none";
      }, 0);
    }
    function dragDrop(e, parent, shipWrapper, cellsArray, playerClass) {
      e.preventDefault();
      var shipWrapperId = e.dataTransfer.getData("text/plain");
      var shipWrapperEl = parent.querySelector("#".concat(shipWrapperId));
      var cell = e.target.closest(".cell");
      var _JSON$parse = JSON.parse(cell.dataset.coords),
        _JSON$parse2 = _slicedToArray(_JSON$parse, 2),
        x = _JSON$parse2[0],
        y = _JSON$parse2[1];
      var dir = _getDir(shipWrapperEl);
      var result = playerClass.placeShip(x, y, dir);
      var decks = _toConsumableArray(shipWrapperEl.children);
      if (result === "Ship cant be placed here") {
        e.stopPropagation();
        return;
      }
      var _loop = function _loop() {
        var celldata = JSON.stringify(result[i]);
        var cell = cellsArray.find(function (item) {
          return item.dataset.coords === celldata;
        });
        cell.innerHTML = decks[i].innerHTML;
      };
      for (var i = 0; i < result.length; i++) {
        _loop();
      }
      if (!playerClass.ships.isEmpty()) {
        var shipSize = playerClass.ships.peek().getSize();
        _createShipElement(shipWrapper, shipSize);
      } else {
        shipWrapper.remove();
      }
    }
    function dragEnd(e) {
      e.target.style.display = "flex";
    }
    function dragOver(e) {
      e.preventDefault();
    }
    function dragEnter(e) {
      e.preventDefault();
    }
    function changeDir(shipWrapper) {
      var dir = _getDir(shipWrapper);
      var decks = shipWrapper.children.length;
      dir === "v" ? _setDir(shipWrapper, "h", decks) : _setDir(shipWrapper, "v", decks);
    }
    return {
      dragStart: dragStart,
      dragEnd: dragEnd,
      dragDrop: dragDrop,
      dragOver: dragOver,
      dragEnter: dragEnter,
      changeDir: changeDir
    };
  }();
  function createPlaceShipMenu(newGameClassFn, mainDiv, alertFn, endgameFn) {
    var GameClass = newGameClassFn();
    var player = GameClass.player;
    var existingElement = document.body.querySelector(".place-ship-menu");
    if (existingElement) document.body.removeChild(existingElement);
    mainDiv.innerHTML = "";
    var placeShipMenu = document.createElement("div");
    placeShipMenu.className = "place-ship-menu";
    placeShipMenu.insertAdjacentHTML("afterbegin", "\n      <h2>Place ships</h2>\n      <div class=\"wrapper\">\n        <div class=\"ships\">\n          <div class=\"ship-wrapper\" id=\"ship-wrapper\" draggable=\"true\"></div>\n        </div>\n        <div class=\"field\">\n          <div class=\"row row-0\">\n            <div class=\"cell\" data-coords=\"[0,0]\"></div>\n            <div class=\"cell\" data-coords=\"[0,1]\"></div>\n            <div class=\"cell\" data-coords=\"[0,2]\"></div>\n            <div class=\"cell\" data-coords=\"[0,3]\"></div>\n            <div class=\"cell\" data-coords=\"[0,4]\"></div>\n            <div class=\"cell\" data-coords=\"[0,5]\"></div>\n            <div class=\"cell\" data-coords=\"[0,6]\"></div>\n            <div class=\"cell\" data-coords=\"[0,7]\"></div>\n            <div class=\"cell\" data-coords=\"[0,8]\"></div>\n            <div class=\"cell\" data-coords=\"[0,9]\"></div>\n          </div>\n          <div class=\"row row-1\">\n            <div class=\"cell\" data-coords=\"[1,0]\"></div>\n            <div class=\"cell\" data-coords=\"[1,1]\"></div>\n            <div class=\"cell\" data-coords=\"[1,2]\"></div>\n            <div class=\"cell\" data-coords=\"[1,3]\"></div>\n            <div class=\"cell\" data-coords=\"[1,4]\"></div>\n            <div class=\"cell\" data-coords=\"[1,5]\"></div>\n            <div class=\"cell\" data-coords=\"[1,6]\"></div>\n            <div class=\"cell\" data-coords=\"[1,7]\"></div>\n            <div class=\"cell\" data-coords=\"[1,8]\"></div>\n            <div class=\"cell\" data-coords=\"[1,9]\"></div>\n          </div>\n          <div class=\"row row-2\">\n            <div class=\"cell\" data-coords=\"[2,0]\"></div>\n            <div class=\"cell\" data-coords=\"[2,1]\"></div>\n            <div class=\"cell\" data-coords=\"[2,2]\"></div>\n            <div class=\"cell\" data-coords=\"[2,3]\"></div>\n            <div class=\"cell\" data-coords=\"[2,4]\"></div>\n            <div class=\"cell\" data-coords=\"[2,5]\"></div>\n            <div class=\"cell\" data-coords=\"[2,6]\"></div>\n            <div class=\"cell\" data-coords=\"[2,7]\"></div>\n            <div class=\"cell\" data-coords=\"[2,8]\"></div>\n            <div class=\"cell\" data-coords=\"[2,9]\"></div>\n          </div>\n          <div class=\"row row-3\">\n            <div class=\"cell\" data-coords=\"[3,0]\"></div>\n            <div class=\"cell\" data-coords=\"[3,1]\"></div>\n            <div class=\"cell\" data-coords=\"[3,2]\"></div>\n            <div class=\"cell\" data-coords=\"[3,3]\"></div>\n            <div class=\"cell\" data-coords=\"[3,4]\"></div>\n            <div class=\"cell\" data-coords=\"[3,5]\"></div>\n            <div class=\"cell\" data-coords=\"[3,6]\"></div>\n            <div class=\"cell\" data-coords=\"[3,7]\"></div>\n            <div class=\"cell\" data-coords=\"[3,8]\"></div>\n            <div class=\"cell\" data-coords=\"[3,9]\"></div>\n          </div>\n          <div class=\"row row-4\">\n            <div class=\"cell\" data-coords=\"[4,0]\"></div>\n            <div class=\"cell\" data-coords=\"[4,1]\"></div>\n            <div class=\"cell\" data-coords=\"[4,2]\"></div>\n            <div class=\"cell\" data-coords=\"[4,3]\"></div>\n            <div class=\"cell\" data-coords=\"[4,4]\"></div>\n            <div class=\"cell\" data-coords=\"[4,5]\"></div>\n            <div class=\"cell\" data-coords=\"[4,6]\"></div>\n            <div class=\"cell\" data-coords=\"[4,7]\"></div>\n            <div class=\"cell\" data-coords=\"[4,8]\"></div>\n            <div class=\"cell\" data-coords=\"[4,9]\"></div>\n          </div>\n          <div class=\"row row-5\">\n            <div class=\"cell\" data-coords=\"[5,0]\"></div>\n            <div class=\"cell\" data-coords=\"[5,1]\"></div>\n            <div class=\"cell\" data-coords=\"[5,2]\"></div>\n            <div class=\"cell\" data-coords=\"[5,3]\"></div>\n            <div class=\"cell\" data-coords=\"[5,4]\"></div>\n            <div class=\"cell\" data-coords=\"[5,5]\"></div>\n            <div class=\"cell\" data-coords=\"[5,6]\"></div>\n            <div class=\"cell\" data-coords=\"[5,7]\"></div>\n            <div class=\"cell\" data-coords=\"[5,8]\"></div>\n            <div class=\"cell\" data-coords=\"[5,9]\"></div>\n          </div>\n          <div class=\"row row-6\">\n            <div class=\"cell\" data-coords=\"[6,0]\"></div>\n            <div class=\"cell\" data-coords=\"[6,1]\"></div>\n            <div class=\"cell\" data-coords=\"[6,2]\"></div>\n            <div class=\"cell\" data-coords=\"[6,3]\"></div>\n            <div class=\"cell\" data-coords=\"[6,4]\"></div>\n            <div class=\"cell\" data-coords=\"[6,5]\"></div>\n            <div class=\"cell\" data-coords=\"[6,6]\"></div>\n            <div class=\"cell\" data-coords=\"[6,7]\"></div>\n            <div class=\"cell\" data-coords=\"[6,8]\"></div>\n            <div class=\"cell\" data-coords=\"[6,9]\"></div>\n          </div>\n          <div class=\"row row-7\">\n            <div class=\"cell\" data-coords=\"[7,0]\"></div>\n            <div class=\"cell\" data-coords=\"[7,1]\"></div>\n            <div class=\"cell\" data-coords=\"[7,2]\"></div>\n            <div class=\"cell\" data-coords=\"[7,3]\"></div>\n            <div class=\"cell\" data-coords=\"[7,4]\"></div>\n            <div class=\"cell\" data-coords=\"[7,5]\"></div>\n            <div class=\"cell\" data-coords=\"[7,6]\"></div>\n            <div class=\"cell\" data-coords=\"[7,7]\"></div>\n            <div class=\"cell\" data-coords=\"[7,8]\"></div>\n            <div class=\"cell\" data-coords=\"[7,9]\"></div>\n          </div>\n          <div class=\"row row-8\">\n            <div class=\"cell\" data-coords=\"[8,0]\"></div>\n            <div class=\"cell\" data-coords=\"[8,1]\"></div>\n            <div class=\"cell\" data-coords=\"[8,2]\"></div>\n            <div class=\"cell\" data-coords=\"[8,3]\"></div>\n            <div class=\"cell\" data-coords=\"[8,4]\"></div>\n            <div class=\"cell\" data-coords=\"[8,5]\"></div>\n            <div class=\"cell\" data-coords=\"[8,6]\"></div>\n            <div class=\"cell\" data-coords=\"[8,7]\"></div>\n            <div class=\"cell\" data-coords=\"[8,8]\"></div>\n            <div class=\"cell\" data-coords=\"[8,9]\"></div>\n          </div>\n          <div class=\"row row-9\">\n            <div class=\"cell\" data-coords=\"[9,0]\"></div>\n            <div class=\"cell\" data-coords=\"[9,1]\"></div>\n            <div class=\"cell\" data-coords=\"[9,2]\"></div>\n            <div class=\"cell\" data-coords=\"[9,3]\"></div>\n            <div class=\"cell\" data-coords=\"[9,4]\"></div>\n            <div class=\"cell\" data-coords=\"[9,5]\"></div>\n            <div class=\"cell\" data-coords=\"[9,6]\"></div>\n            <div class=\"cell\" data-coords=\"[9,7]\"></div>\n            <div class=\"cell\" data-coords=\"[9,8]\"></div>\n            <div class=\"cell\" data-coords=\"[9,9]\"></div>\n          </div>\n        </div>\n      </div>\n      <div class=\"buttons\">\n        <button class=\"accept-btn\">Start game</button>\n        <button class=\"decline-btn\">Reload ships</button>\n      </div>\n      ");
    var board = placeShipMenu.querySelector(".field");
    var shipWrapper = placeShipMenu.querySelector("#ship-wrapper");
    var startGameBtn = placeShipMenu.querySelector(".accept-btn");
    var reloadGameBtn = placeShipMenu.querySelector(".decline-btn");
    var cells = _toConsumableArray(placeShipMenu.querySelectorAll(".field .cell"));
    shipWrapper.addEventListener("dragstart", _placeShipEvents.dragStart);
    shipWrapper.addEventListener("dragend", _placeShipEvents.dragEnd);
    shipWrapper.addEventListener("click", function () {
      return _placeShipEvents.changeDir(shipWrapper);
    });
    var _iterator2 = _createForOfIteratorHelper(cells),
      _step2;
    try {
      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
        var cell = _step2.value;
        cell.addEventListener("drop", function (e) {
          _placeShipEvents.dragDrop(e, placeShipMenu, shipWrapper, cells, player);
        });
        cell.addEventListener("dragover", _placeShipEvents.dragOver);
        cell.addEventListener("dragenter", _placeShipEvents.dragEnter);
      }
    } catch (err) {
      _iterator2.e(err);
    } finally {
      _iterator2.f();
    }
    startGameBtn.addEventListener("click", function (e) {
      gameflow.gameStart(GameClass, mainDiv, board, alertFn, endgameFn);
    });
    reloadGameBtn.addEventListener("click", function (e) {
      e.preventDefault();
      var newPlaceShipMenu = createPlaceShipMenu(newGameClassFn, mainDiv, createAlertDiv, createEndgameDiv);
      document.body.prepend(newPlaceShipMenu);
      alertFn("All ships was reloaded");
    });
    _createShipElement(shipWrapper, player.ships.peek().getSize());
    return placeShipMenu;
  }

  // Game

  function createPlayerBoard(createPlayerField) {
    var playerBoard = document.createElement("div");
    playerBoard.className = "player-board";
    playerBoard.insertAdjacentHTML("afterbegin", "\n      <h2>Player board</h2>\n      <div class=\"player\"></div>\n    ");
    var playerField = playerBoard.querySelector(".player");
    playerField.innerHTML = createPlayerField.innerHTML;
    return playerBoard;
  }
  function createComputerBoard(GameClass, alertFn, endgameFn) {
    var computerBoard = document.createElement("div");
    computerBoard.className = "computer-board";
    computerBoard.insertAdjacentHTML("afterbegin", "\n          <h2>Enemy board</h2>\n          <div class=\"computer\">\n          <div class=\"row row-0\">\n            <div class=\"cell\" data-coords=\"[0,0]\"></div>\n            <div class=\"cell\" data-coords=\"[0,1]\"></div>\n            <div class=\"cell\" data-coords=\"[0,2]\"></div>\n            <div class=\"cell\" data-coords=\"[0,3]\"></div>\n            <div class=\"cell\" data-coords=\"[0,4]\"></div>\n            <div class=\"cell\" data-coords=\"[0,5]\"></div>\n            <div class=\"cell\" data-coords=\"[0,6]\"></div>\n            <div class=\"cell\" data-coords=\"[0,7]\"></div>\n            <div class=\"cell\" data-coords=\"[0,8]\"></div>\n            <div class=\"cell\" data-coords=\"[0,9]\"></div>\n          </div>\n          <div class=\"row row-1\">\n            <div class=\"cell\" data-coords=\"[1,0]\"></div>\n            <div class=\"cell\" data-coords=\"[1,1]\"></div>\n            <div class=\"cell\" data-coords=\"[1,2]\"></div>\n            <div class=\"cell\" data-coords=\"[1,3]\"></div>\n            <div class=\"cell\" data-coords=\"[1,4]\"></div>\n            <div class=\"cell\" data-coords=\"[1,5]\"></div>\n            <div class=\"cell\" data-coords=\"[1,6]\"></div>\n            <div class=\"cell\" data-coords=\"[1,7]\"></div>\n            <div class=\"cell\" data-coords=\"[1,8]\"></div>\n            <div class=\"cell\" data-coords=\"[1,9]\"></div>\n          </div>\n          <div class=\"row row-2\">\n            <div class=\"cell\" data-coords=\"[2,0]\"></div>\n            <div class=\"cell\" data-coords=\"[2,1]\"></div>\n            <div class=\"cell\" data-coords=\"[2,2]\"></div>\n            <div class=\"cell\" data-coords=\"[2,3]\"></div>\n            <div class=\"cell\" data-coords=\"[2,4]\"></div>\n            <div class=\"cell\" data-coords=\"[2,5]\"></div>\n            <div class=\"cell\" data-coords=\"[2,6]\"></div>\n            <div class=\"cell\" data-coords=\"[2,7]\"></div>\n            <div class=\"cell\" data-coords=\"[2,8]\"></div>\n            <div class=\"cell\" data-coords=\"[2,9]\"></div>\n          </div>\n          <div class=\"row row-3\">\n            <div class=\"cell\" data-coords=\"[3,0]\"></div>\n            <div class=\"cell\" data-coords=\"[3,1]\"></div>\n            <div class=\"cell\" data-coords=\"[3,2]\"></div>\n            <div class=\"cell\" data-coords=\"[3,3]\"></div>\n            <div class=\"cell\" data-coords=\"[3,4]\"></div>\n            <div class=\"cell\" data-coords=\"[3,5]\"></div>\n            <div class=\"cell\" data-coords=\"[3,6]\"></div>\n            <div class=\"cell\" data-coords=\"[3,7]\"></div>\n            <div class=\"cell\" data-coords=\"[3,8]\"></div>\n            <div class=\"cell\" data-coords=\"[3,9]\"></div>\n          </div>\n          <div class=\"row row-4\">\n            <div class=\"cell\" data-coords=\"[4,0]\"></div>\n            <div class=\"cell\" data-coords=\"[4,1]\"></div>\n            <div class=\"cell\" data-coords=\"[4,2]\"></div>\n            <div class=\"cell\" data-coords=\"[4,3]\"></div>\n            <div class=\"cell\" data-coords=\"[4,4]\"></div>\n            <div class=\"cell\" data-coords=\"[4,5]\"></div>\n            <div class=\"cell\" data-coords=\"[4,6]\"></div>\n            <div class=\"cell\" data-coords=\"[4,7]\"></div>\n            <div class=\"cell\" data-coords=\"[4,8]\"></div>\n            <div class=\"cell\" data-coords=\"[4,9]\"></div>\n          </div>\n          <div class=\"row row-5\">\n            <div class=\"cell\" data-coords=\"[5,0]\"></div>\n            <div class=\"cell\" data-coords=\"[5,1]\"></div>\n            <div class=\"cell\" data-coords=\"[5,2]\"></div>\n            <div class=\"cell\" data-coords=\"[5,3]\"></div>\n            <div class=\"cell\" data-coords=\"[5,4]\"></div>\n            <div class=\"cell\" data-coords=\"[5,5]\"></div>\n            <div class=\"cell\" data-coords=\"[5,6]\"></div>\n            <div class=\"cell\" data-coords=\"[5,7]\"></div>\n            <div class=\"cell\" data-coords=\"[5,8]\"></div>\n            <div class=\"cell\" data-coords=\"[5,9]\"></div>\n          </div>\n          <div class=\"row row-6\">\n            <div class=\"cell\" data-coords=\"[6,0]\"></div>\n            <div class=\"cell\" data-coords=\"[6,1]\"></div>\n            <div class=\"cell\" data-coords=\"[6,2]\"></div>\n            <div class=\"cell\" data-coords=\"[6,3]\"></div>\n            <div class=\"cell\" data-coords=\"[6,4]\"></div>\n            <div class=\"cell\" data-coords=\"[6,5]\"></div>\n            <div class=\"cell\" data-coords=\"[6,6]\"></div>\n            <div class=\"cell\" data-coords=\"[6,7]\"></div>\n            <div class=\"cell\" data-coords=\"[6,8]\"></div>\n            <div class=\"cell\" data-coords=\"[6,9]\"></div>\n          </div>\n          <div class=\"row row-7\">\n            <div class=\"cell\" data-coords=\"[7,0]\"></div>\n            <div class=\"cell\" data-coords=\"[7,1]\"></div>\n            <div class=\"cell\" data-coords=\"[7,2]\"></div>\n            <div class=\"cell\" data-coords=\"[7,3]\"></div>\n            <div class=\"cell\" data-coords=\"[7,4]\"></div>\n            <div class=\"cell\" data-coords=\"[7,5]\"></div>\n            <div class=\"cell\" data-coords=\"[7,6]\"></div>\n            <div class=\"cell\" data-coords=\"[7,7]\"></div>\n            <div class=\"cell\" data-coords=\"[7,8]\"></div>\n            <div class=\"cell\" data-coords=\"[7,9]\"></div>\n          </div>\n          <div class=\"row row-8\">\n            <div class=\"cell\" data-coords=\"[8,0]\"></div>\n            <div class=\"cell\" data-coords=\"[8,1]\"></div>\n            <div class=\"cell\" data-coords=\"[8,2]\"></div>\n            <div class=\"cell\" data-coords=\"[8,3]\"></div>\n            <div class=\"cell\" data-coords=\"[8,4]\"></div>\n            <div class=\"cell\" data-coords=\"[8,5]\"></div>\n            <div class=\"cell\" data-coords=\"[8,6]\"></div>\n            <div class=\"cell\" data-coords=\"[8,7]\"></div>\n            <div class=\"cell\" data-coords=\"[8,8]\"></div>\n            <div class=\"cell\" data-coords=\"[8,9]\"></div>\n          </div>\n          <div class=\"row row-9\">\n            <div class=\"cell\" data-coords=\"[9,0]\"></div>\n            <div class=\"cell\" data-coords=\"[9,1]\"></div>\n            <div class=\"cell\" data-coords=\"[9,2]\"></div>\n            <div class=\"cell\" data-coords=\"[9,3]\"></div>\n            <div class=\"cell\" data-coords=\"[9,4]\"></div>\n            <div class=\"cell\" data-coords=\"[9,5]\"></div>\n            <div class=\"cell\" data-coords=\"[9,6]\"></div>\n            <div class=\"cell\" data-coords=\"[9,7]\"></div>\n            <div class=\"cell\" data-coords=\"[9,8]\"></div>\n            <div class=\"cell\" data-coords=\"[9,9]\"></div>\n          </div>\n        </div>  \n    ");
    var computerCells = _toConsumableArray(computerBoard.querySelectorAll(".cell"));
    var _iterator3 = _createForOfIteratorHelper(computerCells),
      _step3;
    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var cell = _step3.value;
        cell.addEventListener("click", /*#__PURE__*/function () {
          var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(e) {
            return _regeneratorRuntime().wrap(function _callee2$(_context2) {
              while (1) switch (_context2.prev = _context2.next) {
                case 0:
                  _context2.next = 2;
                  return gameflow.attack(e, GameClass, alertFn, endgameFn);
                case 2:
                case "end":
                  return _context2.stop();
              }
            }, _callee2);
          }));
          return function (_x5) {
            return _ref.apply(this, arguments);
          };
        }());
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }
    return computerBoard;
  }
  function createAlertDiv(_x6) {
    return _createAlertDiv.apply(this, arguments);
  }
  function _createAlertDiv() {
    _createAlertDiv = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(message) {
      var alertDiv, existingElement;
      return _regeneratorRuntime().wrap(function _callee3$(_context3) {
        while (1) switch (_context3.prev = _context3.next) {
          case 0:
            alertDiv = document.createElement("div");
            alertDiv.className = "alert-div";
            alertDiv.insertAdjacentHTML("beforeend", "<h3>Alert! ".concat(message, "!</h3>"));
            existingElement = document.querySelector(".alert-div");
            if (existingElement) {
              _context3.next = 8;
              break;
            }
            document.body.appendChild(alertDiv);
            _context3.next = 9;
            break;
          case 8:
            return _context3.abrupt("return");
          case 9:
            _context3.next = 11;
            return _timeout(2000);
          case 11:
            document.body.removeChild(alertDiv);
          case 12:
          case "end":
            return _context3.stop();
        }
      }, _callee3);
    }));
    return _createAlertDiv.apply(this, arguments);
  }
  function createEndgameDiv(_x7) {
    return _createEndgameDiv.apply(this, arguments);
  }
  function _createEndgameDiv() {
    _createEndgameDiv = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4(winner) {
      var background, text, startAgainBtn, existingElement;
      return _regeneratorRuntime().wrap(function _callee4$(_context4) {
        while (1) switch (_context4.prev = _context4.next) {
          case 0:
            background = document.createElement("div");
            background.className = "background";
            text = winner === "player" ? "<h1>Congratulations! Player wins!</h1>" : "<h1>Sorry to say, but computer wins.</h1>";
            background.insertAdjacentHTML("beforeend", "\n      <div class=\"endgame\">\n        <h1>Game over!</h1>\n        ".concat(text, "\n        <button id=\"start-again-btn\">Start again</button>\n      </div>\n      "));
            startAgainBtn = background.querySelector("#start-again-btn");
            startAgainBtn.addEventListener("click", function (e) {
              window.location.reload();
            });
            existingElement = document.querySelector(".endgame");
            if (existingElement) {
              _context4.next = 11;
              break;
            }
            _context4.next = 10;
            return _timeout(3000);
          case 10:
            document.body.prepend(background);
          case 11:
          case "end":
            return _context4.stop();
        }
      }, _callee4);
    }));
    return _createEndgameDiv.apply(this, arguments);
  }
  function createHowToPlayMenu() {
    var background = document.createElement('div');
    background.className = 'background';
    background.insertAdjacentHTML("afterbegin", "\n      <div class=\"how-to-play\">\n        <div id=\"how-to-close-btn\" class=\"hit-black\"></div>\n        <h2>Starships - How to Play</h2>\n        <p><strong>Objective:</strong> The objective of Battleship is to strategically place your ships on a grid and guess\n          the locations of your opponent's ships in order to sink them all.</p>\n        <h4>Game Setup</h4>\n        <ol>\n          <li>Each player has their own grid, typically a 10x10 grid.</li>\n          <li>Ships of different sizes are placed on the grid, with each ship occupying a certain number of adjacent grid\n            cells horizontally or vertically.</li>\n        </ol>\n        <h4>Taking Turns</h4>\n        <ol>\n          <li>Players take turns guessing the coordinates of their opponent's ships.</li>\n          <li>After each guess, the result is revealed as a hit or a miss.</li>\n        </ol>\n        <h4>Hit and Miss Feedback</h4>\n        <ol>\n          <li>If a player's guess hits a ship, they get another turn to make additional guesses.</li>\n          <li>The opponent's grid is usually marked to indicate the hits and misses, allowing players to track their\n            progress. </li>\n          <li>The goal is to find and sink all of the opponent's ships before they do the same to you.</li>\n          <li>When all the cells of a ship are hit, it is considered sunk.</li>\n          <li>The game continues until one player has sunk all of their opponent's ships, declaring them the winner.</li>\n        </ol>\n      </div>\n    ");
    var closeBtn = background.querySelector('#how-to-close-btn');
    closeBtn.addEventListener('click', function (e) {
      if (e.target.id === 'how-to-close-btn') ;
      document.body.removeChild(background);
    });
    var existingElement = document.body.querySelector('.background');
    if (existingElement) document.body.removeChild(existingElement);else document.body.appendChild(background);
  }

  //------------------------------------------------------------------------------------------
  return {
    createPlaceShipMenu: createPlaceShipMenu,
    createPlayerBoard: createPlayerBoard,
    createComputerBoard: createComputerBoard,
    createAlertDiv: createAlertDiv,
    createEndgameDiv: createEndgameDiv,
    createHowToPlayMenu: createHowToPlayMenu
  };
}();
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DOM);

/***/ }),

/***/ "./src/modules/gameflow.js":
/*!*********************************!*\
  !*** ./src/modules/gameflow.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Game": () => (/* binding */ Game),
/* harmony export */   "instanceGame": () => (/* binding */ instanceGame)
/* harmony export */ });
function _regeneratorRuntime() { "use strict"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = "function" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || "@@iterator", asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator", toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, ""); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, "_invoke", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: "normal", arg: fn.call(obj, arg) }; } catch (err) { return { type: "throw", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { ["next", "throw", "return"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if ("throw" !== record.type) { var result = record.arg, value = result.value; return value && "object" == _typeof(value) && hasOwn.call(value, "__await") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke("next", value, resolve, reject); }, function (err) { invoke("throw", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke("throw", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, "_invoke", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = "suspendedStart"; return function (method, arg) { if ("executing" === state) throw new Error("Generator is already running"); if ("completed" === state) { if ("throw" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if ("next" === context.method) context.sent = context._sent = context.arg;else if ("throw" === context.method) { if ("suspendedStart" === state) throw state = "completed", context.arg; context.dispatchException(context.arg); } else "return" === context.method && context.abrupt("return", context.arg); state = "executing"; var record = tryCatch(innerFn, self, context); if ("normal" === record.type) { if (state = context.done ? "completed" : "suspendedYield", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } "throw" === record.type && (state = "completed", context.method = "throw", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, "throw" === methodName && delegate.iterator["return"] && (context.method = "return", context.arg = undefined, maybeInvokeDelegate(delegate, context), "throw" === context.method) || "return" !== methodName && (context.method = "throw", context.arg = new TypeError("The iterator does not provide a '" + methodName + "' method")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if ("throw" === record.type) return context.method = "throw", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, "return" !== context.method && (context.method = "next", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = "throw", context.arg = new TypeError("iterator result is not an object"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = "normal", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: "root" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if ("function" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, "constructor", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, "constructor", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"), exports.isGeneratorFunction = function (genFun) { var ctor = "function" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || "GeneratorFunction" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, "GeneratorFunction")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, "Generator"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, "toString", function () { return "[object Generator]"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = "next", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) "t" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if ("throw" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = "throw", record.arg = exception, context.next = loc, caught && (context.method = "next", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if ("root" === entry.tryLoc) return handle("end"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, "catchLoc"), hasFinally = hasOwn.call(entry, "finallyLoc"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error("try statement without catch or finally"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && ("break" === type || "continue" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = "next", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if ("throw" === record.type) throw record.arg; return "break" === record.type || "continue" === record.type ? this.next = record.arg : "return" === record.type ? (this.rval = this.arg = record.arg, this.method = "return", this.next = "end") : "normal" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, "catch": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if ("throw" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error("illegal catch attempt"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, "next" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }
function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Game = /*#__PURE__*/function () {
  function Game(player, computer, queue) {
    var _this = this;
    _classCallCheck(this, Game);
    this.player = player;
    this.computer = computer;
    this.gameQueue = function () {
      queue.enqueue(_this.player);
      queue.enqueue(_this.computer);
      return queue;
    }();
    this.gameStarted = true;
    this.winner;
  }
  _createClass(Game, [{
    key: "_computerAttack",
    value: function _computerAttack(enemy) {
      var _this$computer$genera = this.computer.generateCoords(),
        _this$computer$genera2 = _slicedToArray(_this$computer$genera, 2),
        x = _this$computer$genera2[0],
        y = _this$computer$genera2[1];
      return this.computer.attackEnemy(enemy, x, y);
    }
  }, {
    key: "_playerAttack",
    value: function _playerAttack(enemy, coords) {
      var _JSON$parse = JSON.parse(coords),
        _JSON$parse2 = _slicedToArray(_JSON$parse, 2),
        x = _JSON$parse2[0],
        y = _JSON$parse2[1];
      return this.player.attackEnemy(enemy, x, y);
    }
  }, {
    key: "_moveQueue",
    value: function _moveQueue(result) {
      if (result === "miss") this.gameQueue.enqueue(this.gameQueue.dequeue());
    }
  }, {
    key: "_isGameOver",
    value: function _isGameOver(result) {
      if (result === "Game over") {
        this.winner = this._getAttacker();
        return true;
      }
    }
  }, {
    key: "_getAttacker",
    value: function _getAttacker() {
      return this.gameQueue.peek();
    }
  }, {
    key: "_getAttacked",
    value: function _getAttacked() {
      return this.gameQueue.last();
    }

    // attack(coords) {
    //   const [x, y] = JSON.parse(coords);
    //   const result = this._getAttacker().attackEnemy(this._getAttacked(), x, y);
    //   if (result === "Cant hit one cell twice") {
    //     return `You ${result}`;
    //   }
    //   if (result === "Game over") {
    //     alert("Game over");
    //     this.winner = this._getAttacker();
    //     return;
    //   }
    //   this._moveQueue(result);

    //   if (this._getAttacker() === this.computer) {
    //     const attackCoords = this.computer.generateCoords();
    //     this.attack(JSON.stringify(attackCoords));
    //   }
    // }
  }, {
    key: "attack",
    value: function () {
      var _attack = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(coords, successCb, alertCb, endgameCb) {
        var attaker, attacked, _JSON$parse3, _JSON$parse4, x, y, result, winner, attackCoords;
        return _regeneratorRuntime().wrap(function _callee$(_context) {
          while (1) switch (_context.prev = _context.next) {
            case 0:
              if (this.gameStarted) {
                _context.next = 2;
                break;
              }
              return _context.abrupt("return");
            case 2:
              attaker = this._getAttacker();
              attacked = this._getAttacked();
              _JSON$parse3 = JSON.parse(coords), _JSON$parse4 = _slicedToArray(_JSON$parse3, 2), x = _JSON$parse4[0], y = _JSON$parse4[1];
              result = attaker.attackEnemy(attacked, x, y);
              console.log(result);
              if (!(result === "Cant hit one cell twice")) {
                _context.next = 10;
                break;
              }
              alertCb(result);
              return _context.abrupt("return");
            case 10:
              if (_typeof(result) === 'object') {
                successCb(attacked, coords, result.value);
                if (result.gamestate === 'game over') {
                  this.gameStarted = false;
                  winner = attaker.name;
                  endgameCb(winner);
                }
                console.log('game over');
              }
              successCb(attacked, coords, result);
              this._moveQueue(result);
              if (!(this._getAttacker() === this.computer)) {
                _context.next = 19;
                break;
              }
              _context.next = 16;
              return this._timeout(2000);
            case 16:
              attackCoords = JSON.stringify(this.computer.generateCoords());
              _context.next = 19;
              return this.attack(attackCoords, successCb, alertCb, endgameCb);
            case 19:
            case "end":
              return _context.stop();
          }
        }, _callee, this);
      }));
      function attack(_x2, _x3, _x4, _x5) {
        return _attack.apply(this, arguments);
      }
      return attack;
    }()
  }, {
    key: "_timeout",
    value: function _timeout(ms) {
      return new Promise(function (resolve) {
        return setTimeout(resolve, ms);
      });
    }
  }]);
  return Game;
}();
function instanceGame(ShipClass, BoardClass, PlayerClass, ComputerClass, QueueClass, GameClass) {
  var player = new PlayerClass(new BoardClass(), ShipClass, new QueueClass());
  var computer = new ComputerClass(new BoardClass(), ShipClass, new QueueClass());
  return new GameClass(player, computer, new QueueClass());
}


/***/ }),

/***/ "./src/modules/player.js":
/*!*******************************!*\
  !*** ./src/modules/player.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ Player)
/* harmony export */ });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _iterableToArrayLimit(arr, i) { var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"]; if (null != _i) { var _s, _e, _x, _r, _arr = [], _n = !0, _d = !1; try { if (_x = (_i = _i.call(arr)).next, 0 === i) { if (Object(_i) !== _i) return; _n = !1; } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0); } catch (err) { _d = !0, _e = err; } finally { try { if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r)) return; } finally { if (_d) throw _e; } } return _arr; } }
function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var Player = /*#__PURE__*/function () {
  function Player(gameboard, ShipClass, queue) {
    var _this = this;
    _classCallCheck(this, Player);
    this.name = "player";
    this.gameboard = gameboard;
    this.playerShips = [4, 3, 3, 2, 2, 2, 1, 1, 1, 1].map(function (len) {
      return new ShipClass(len);
    });
    this.ships = function () {
      _this.playerShips.forEach(function (ship) {
        queue.enqueue(ship);
      });
      return queue;
    }();
    this.attacks = [];
  }
  _createClass(Player, [{
    key: "placeShip",
    value: function placeShip(x, y, direction) {
      if (this.ships.isEmpty()) return "All ships placed";
      var ship = this.ships.peek();
      ship.setDirection(direction);
      var result = this.gameboard.placeShip(ship, x, y);
      if (result !== "Ship cant be placed here") {
        this.ships.dequeue();
      }
      return result;
    }
  }, {
    key: "attackEnemy",
    value: function attackEnemy(enemy, x, y) {
      if (enemy.isAllSunk()) return;
      if (this.attacks.some(function (_ref) {
        var _ref2 = _slicedToArray(_ref, 2),
          a = _ref2[0],
          b = _ref2[1];
        return a === x && b === y;
      })) {
        return "Cant hit one cell twice";
      }
      this.attacks.push([x, y]);
      var result = enemy.gameboard.receiveAttack(x, y);
      if (result === "sink" && enemy.isAllSunk()) return {
        value: "sink",
        gamestate: "game over"
      };
      return result;
    }
  }, {
    key: "isAllSunk",
    value: function isAllSunk() {
      return this.playerShips.every(function (ship) {
        return ship.sink;
      });
    }
  }, {
    key: "isAllPlaced",
    value: function isAllPlaced() {
      return this.ships.size() === 0;
    }
  }]);
  return Player;
}();


/***/ }),

/***/ "./src/modules/ship.js":
/*!*****************************!*\
  !*** ./src/modules/ship.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ S)
/* harmony export */ });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var S = /*#__PURE__*/function () {
  function S(size) {
    _classCallCheck(this, S);
    this.size = size;
    this.hits = _toConsumableArray(Array(size).keys());
    this.decks = [];
    this.sink = false;
    //[0,1,2,3]
    this.direction = "v";
  }
  _createClass(S, [{
    key: "getSize",
    value: function getSize() {
      return this.size;
    }
  }, {
    key: "getHits",
    value: function getHits() {
      return this.hits;
    }
  }, {
    key: "getDirection",
    value: function getDirection() {
      return this.direction;
    }
  }, {
    key: "changeDirection",
    value: function changeDirection() {
      this.direction === "v" ? this.direction = "h" : this.direction = "v";
    }
  }, {
    key: "setDirection",
    value: function setDirection(dir) {
      this.direction = dir;
    }
  }, {
    key: "hit",
    value: function hit(pos) {
      if (this.hits[pos] === "hit" || this.hits[pos] === "sink") return;
      this.hits[pos] = "hit";
      if (this.isSink()) {
        this.hits = this.hits.map(function (hit) {
          return hit = "sink";
        });
        this.sink = true;
      }
    }
  }, {
    key: "isSink",
    value: function isSink() {
      return this.hits.every(function (hit) {
        return hit === "hit";
      });
    }
  }]);
  return S;
}();


/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_dom_Dom__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/dom/Dom */ "./src/modules/dom/Dom.js");
/* harmony import */ var _modules_ship__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/ship */ "./src/modules/ship.js");
/* harmony import */ var _modules_board__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/board */ "./src/modules/board.js");
/* harmony import */ var _modules_player__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/player */ "./src/modules/player.js");
/* harmony import */ var _modules_computer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/computer */ "./src/modules/computer.js");
/* harmony import */ var _data_structures_queue__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./data_structures/queue */ "./src/data_structures/queue.js");
/* harmony import */ var _modules_gameflow__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/gameflow */ "./src/modules/gameflow.js");







var body = document.body;
var main = document.querySelector(".main");
var howToPlayBtn = document.querySelector("#how-to-play");
howToPlayBtn.addEventListener("click", _modules_dom_Dom__WEBPACK_IMPORTED_MODULE_0__["default"].createHowToPlayMenu);
body.prepend(_modules_dom_Dom__WEBPACK_IMPORTED_MODULE_0__["default"].createPlaceShipMenu(function () {
  return (0,_modules_gameflow__WEBPACK_IMPORTED_MODULE_6__.instanceGame)(_modules_ship__WEBPACK_IMPORTED_MODULE_1__["default"], _modules_board__WEBPACK_IMPORTED_MODULE_2__["default"], _modules_player__WEBPACK_IMPORTED_MODULE_3__["default"], _modules_computer__WEBPACK_IMPORTED_MODULE_4__["default"], _data_structures_queue__WEBPACK_IMPORTED_MODULE_5__["default"], _modules_gameflow__WEBPACK_IMPORTED_MODULE_6__.Game);
}, main, _modules_dom_Dom__WEBPACK_IMPORTED_MODULE_0__["default"].createAlertDiv, _modules_dom_Dom__WEBPACK_IMPORTED_MODULE_0__["default"].createEndgameDiv));
})();

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,